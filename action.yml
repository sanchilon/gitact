name: OpenSrcAction
description: "Open Source Verify"
inputs:
  uid:
    description: "User name"
    required: true
  email:
    description: "email id"
    required: true
  prod_repository:
    description: "Main Repository to open source"
    required: true
  prod_branch:
    description: ""
    required: true
  opnsrc_static_repository:
    description: "This is the repository that holds static open source files"
    required: true
  opnsrc_branch:
    description: ""
    required: true
  token:
    description: "secrets"
    required: true
outputs:
  status:
    description:
    value: "Success"
runs:
 using: "composite"
 steps:
 - name: CONFIG
   shell: bash
   run: git config --global user.name ${{inputs.uid}} && git config --global user.email ${{inputs.email}}
 - id: checkout1
   name: CHECKOUTVERIFYPROJ
   uses: actions/checkout@v2
   with: 
     repository: ${{inputs.opnsrc_static_repository}}
     path: ./VerifyProj
     ref: refs/heads/${{inputs.opnsrc_branch}}
     token: ${{ inputs.token }}
 - id: checkpath1
   name: CHECKPATH1
   shell: bash
   run: ls -al
 - id: checkout2
   name: CHECKOUT VERIFY
   uses: actions/checkout@v2
   with:
     repository: ${{ inputs.prod_repository }}
     path: ./OpenVerify
     ref: refs/heads/${{ inputs.prod_branch }}
     token: ${{inputs.token}}
 - id: checkpath2
   name: CHECKPATH2
   shell: bash
   run: ls -al ./OpenVerify
 - name: ECHOPATH
   shell: bash
   run: echo ${{github.action_path}}
 - id: iop
   shell: bash
   run: cp -R ./VerifyProj/openverify ./OpenVerify/openverify
 - id: checkpath3
   name: CHECKPATH3
   shell: bash
   run: ls -al ./OpenVerify
# - id: transform
#   shell: bash 
#   name: TRANSFORM
#   run: |
#      ./OpenVerify/openverify/transform.linux.sh && \
#      ./OpenVerify/openverify/transform.linux.sh && \
#      ./OpenVerify/openverify/transform.linux.sh && \
#      rm -rf openverify && rm -rf ./OpenVerify/.git && rm -rf ./OpenVerify/.github && \
#      zip -r OpenVerify.zip OpenVerify
# - id: list
#   name: LIST
#   shell: bash
#   run: ls -al
# - id: copy
#   name: COPY
#   shell: bash
#   run: cp OpenVerify.zip ./VerifyProj && cp -R OpenVerify ./VerifyProj
# - id: push
#   name: PUSH
#   shell: bash
#   run: |
#     cd ./VerifyProj && \
#     git switch -C test1 && \
#     git push -d origin test1
#     git add . && \
#     git commit -m "Added OpenVerify folder " && \
#     git push -u origin test1
# 
 #- id: push
 #  name: PUSH
 #  shell: bash
 #  run: | 
 #    cd $HOME/VerifyProj
 #    cp $HOME/OpenVerify/OpenVerify.zip .
 #    git add OpenVerify.zip && git commit -m "Added open source"
 #    git push -u origin main
